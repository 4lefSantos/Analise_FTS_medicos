---
title: "Analise_medicos"
format: html
editor: visual
---

# Médicos nos munícipios de Goiás

Para estimar a razão de médicos por população para cada município de Goiás, será seguindo o seguinte processo:\
\
1° Levantamento dos dados populacionais;\
2° Levantamento dos dados de médicos na métrica FTE;\
3° Levantamento de indicadores socio-econômicos dos municípios.

Após isso, os dados serão agregados em uma única base de dados, a execução operacional desses processos seguirá a metodologia detalhada abaixo:

1\. Levantamento dos dados populacionais.\
1.1. Censo 2022;\
1.2. Tratamento dos dados populacionais.

2\. Levantamento dos dados de profissionais de saúde por munícipio.\
2.1. Conexão Dremio;\
2.2. Selecionar apenas médicos do munícipio de Goiás.

3\. Calculando a razão médicos por habitantes desagregado por nível de atenção.

4\. Calculando a razão médicos por habitantes.

5\. Levantamento de dados socio-econômicos por município.\
5.1. PIB per capita;\
5.2. Índice de Desenvolvimento Humano (IDH);\
5.3 Índice de Gini;\
5.4. Taxa de urbanização;\
5.5. Número de inscritos no Cadastro Único.

# 1. Levantamento dos dados populacionais.

A coleta de dados populacionais utilizada foi do Censo 2022 através do Sistema IBGE de Recuperação Automática - SIDRA, exportada em formato xlsx.

### 1.1. Censo 2022.

Aqui utiliza-se a função read_excel do pacote readxl para o carregamento dos dados.

```{r}
library(tidyverse)
library(readxl)
library(RODBC)
library(geobr)
library(sf)
library(ggplot2)
```

```{r}



censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
```

### 1.2. Tratamento dos dados populacionais.

Após o carregamento da base, executa-se alguns tratamentos: empilhamento dos dados dividido em dois datraframe distintos (masculino e feminino), e por fim a agregação dessas duas bases.

```{r}
#| echo: false

# CONFIGURANDO BASE MASCULINO

faixa_masculino <- censo_municipios_goias[,1:23] |> 
                      gather(key = "faixa_etaria", value = "total", 3:23) |> 
  mutate(sexo = "Masculino", .after = municipio) |> 
  mutate(faixa_etaria = gsub("-H", "", faixa_etaria))
         
# CONFIGURANDO BASE FEMININO    
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |> 
                      gather(key = "faixa_etaria", value = "total", 3:23) |> 
  mutate(sexo = "Feminino", .after = municipio) |> 
  mutate(faixa_etaria = gsub("-M", "", faixa_etaria))

# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino) |>
  mutate(total = replace_na(total, 0)) |> 
  mutate(total = gsub("-", "0", total)) |> 
  mutate(total = as.numeric(total))


```

## 2. Levantamento dos dados de profissionais de saúde por munícipio;

O levantamento de dados de profissionais de saúde por munícipio será realizado na métrica FTE (Full-time Equivalet) que considera as horas úteis de trabalho.

### 2.1. Conexão Dremio

Os dados coletados através da conexão com o bando de dados hospedados no Dremio.

```{r}
# codigo para acessar dados de um datalake 

dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")


channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
                                     HOST=%s;
                                     PORT=%s;
                                     UID=%s;
                                     PWD=%s;
                                     AUTHENTICATIONTYPE=Basic Authentication;
                                     CONNECTIONTYPE=Direct", 
                         dremio_host, 
                         dremio_port, 
                         dremio_uid, 
                         dremio_pwd))

query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'



profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
```

### 2.2. Selecionar apenas médicos do munícipio de Goiás

A seguir será filtrados apenas os médicos dos municípios de Goiás.

```{r}
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |> 
  filter(ano == "2024") |> 
  filter(uf_sigla == "GO") |> 
  filter(categoria == "Médico")

#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |> 
  select(ibge, municipio, total) |> 
  group_by(ibge, municipio) |> 
  summarise(população = sum(total)) |> 
  mutate(ibge = substr(ibge, 1, 6))


```

## 3. Calculando a razão médicos por habitantes desagregado por nível de atenção;

A sequência seguida para cada nível de atenção (primária, secundária e terciária) é de filtrar os respectivos médicos (FTE_40) e agregar na tabela de população por município, criando uma nova variável: razão de médicos por população de cada município.

```{r}
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |> 
  filter(nivel_atencao == "Primária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipios |>
  left_join(med_primario, by = c("ibge" = "cod_ibge")) |> 
  mutate(razao_medicos = FTE_40/população)

#Filtrando nível de atenção secundario
med_secundario <- medicos_municipios |> 
  filter(nivel_atencao == "Secundária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipios |>
  left_join(med_secundario, by = c("ibge" = "cod_ibge")) |> 
  mutate(razao_medicos = FTE_40/população)

#Filtrando nível de atenção terciario
med_terciario <- medicos_municipios |> 
  filter(nivel_atencao == "Terciária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipios |> 
    left_join(med_terciario, by = c("ibge" = "cod_ibge")) |> 
    mutate(razao_medicos = FTE_40/população)

```

## 4. Calculando a razão médicos por habitantes;

A seguir será calculado o FTE_40 por munícipio, somando todos os níveis de atenção, e agregado na tabela de população por municipio em um novo dataframe, com o cálculo da nova variável: razão de médicos por população.

```{r}
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
  select(cod_ibge, uf_sigla, FTE_40, municipio) |> 
  group_by(cod_ibge, uf_sigla, municipio) |> 
  summarise(medicos_FTE_40 = sum(FTE_40), .groups = 'drop')

# AGREGANDO A BASE DE MEDICOS POR MUNICÍPIO NA BASE POPULAÇÃO POR MUNICÍPIO
razao_med_total <- população_municipios |> 
  left_join(medicos_total_mun, by = c("ibge" = "cod_ibge")) |> 
  mutate(razão_medicos = medicos_FTE_40/população) #CRIANDO A VARIÁVEL RAZÃO DE MÉDICOS POR POPULAÇÃO
  
```

## 5. Levantamento de dados socio-econômicos por município.

A seguir serão coletadas uma séria de indicadores socio-econômicos de forma a integrar a base de dados razao_med_total.

### 5.1. PIB per capita;

Os dados do PIB por município foram coletados do Sistema IBGE de Recuperação Automática - SIDRA do ano de 2021. Para o cálculo do PIB per capita, dividiu o PIB bruto pelo dado populacional do Censo 2022.

```{r}

PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx") |> 
  mutate(ibge = substr(ibge, 1, 6))

base_final <- razao_med_total |> 
  left_join(PIB, by = c("ibge" = "ibge")) |> 
  mutate(pib_percapita = (PIB/população)*1000)
  
  
base_final <- base_final |> 
  select(ibge, municipio.x, população, medicos_FTE_40, razão_medicos, pib_percapita)

```

### 5.2. IDH

Os dados do Índice de Desenvolvimento Humano foram coletados do Atlas Brasil de 2010 quando ocorreu a última publicação pelo Programa das Nações Unidas para o Desenvolvimento (PNUD), e pode ser consultado no seguinte link: <http://www.atlasbrasil.org.br/consulta/planilha>

```{r}
IDH <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/IDH.xlsx") |> 
  mutate(ibge = substr(ibge, 1, 6))

base_final <- base_final |> 
  left_join(IDH, by = c("ibge" = "ibge"))

base_final <- base_final |> 
  select(-municipio.x)
```

### 5.3. Índice de Gini

Os dados do Índice de Gini que mede a desiguldade de renda foram coletados do Atlas Brasil de 2010 quando ocorreu a última publicação, pode ser consultado no seguinte link: [http://www.atlasbrasil.org.br/consulta/planilha](#0)

```{r}
Gini <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Gini.xlsx") |> 
  mutate(ibge = substr(ibge, 1, 6))

base_final <- base_final |> 
  left_join(Gini, by = c("ibge" = "ibge"))

base_final <- base_final |> 
  select(-Territorialidades)
```

### 5.4. Taxa de urbanização

A fonte dos seguintes dados de urbanização, foram coletadas do IBGE da edição de 2019. A metodologia utilizada é um mapeamento realizado via satélite. Para mais informações consultar o link: <https://www.ibge.gov.br/geociencias/cartas-e-mapas/redes-geograficas/15789-areas-urbanizadas.html?=&t=o-que-e>

```{r}
urban <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Urbanização.xlsx") |> 
  mutate(ibge = substr(ibge, 1, 6))

urban <- urban |> 
  select(-municipio)

base_final <- base_final |> 
  left_join(urban, by = c("ibge" = "ibge"))

base_final <- base_final |> 
  mutate(tx_urban = km_urbanizado/km_mapeado)
```

### 5.5. Número de inscritos no Cadastro Único

A coleta de dados do número de inscritos no Cadastro Único foi realizado no VIS DATA 3 da Secretaria de Avaliação, Gestão da Informação e Cadastro Único - SAGICAD. Os dados são do TOTAL de pessoas inscritas no programa desagregadas por município. O link para consulta: <https://aplicacoes.cidadania.gov.br/vis/data3/data-explorer.php>

```{r}
cadunico <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/cadunico.xlsx") |> 
  mutate(ibge = substr(ibge, 1, 6))

cadunico <- cadunico |> 
  select(-Unidade_Territorial)

base_final <- base_final |> 
  left_join(cadunico, by = c("ibge" = "ibge"))

base_final <- base_final |> 
  mutate(cadunico_pop = `Quantidade total de pessoas inscritas no Cadastro Único`/população)

base_final <- base_final |> 
  select(-medicos_FTE_40, -população, -km_urbanizado, -km_mapeado, - `Quantidade total de pessoas inscritas no Cadastro Único`)

base_final <- base_final |> 
  mutate(razão_medicos = razão_medicos*1000)
```

```{r}

# UTILIZANDO O PACOTE GEOBR
mun <- read_municipality(code_muni="all", year=2022)
  
mun <- mun |> 
    mutate(code_muni = as.character(code_muni)) |> 
    filter(abbrev_state == "GO") |> 
    mutate(code_muni = substr(code_muni, 1, 6)) |> 
    select(code_muni, geom)
  
mun_sf <- st_as_sf(mun)
  
mapa <- base_final |> 
    left_join(mun_sf, by = c("ibge" = "code_muni"))

mapa_sf <- st_as_sf(mapa)

# UTILIZANDO O SHAPEFILE DO IBGE
mapaibge <- st_read("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/02-scripts/GO_Municipios_2022.shp") |> 
  mutate(CD_MUN = substr(CD_MUN, 1, 6))

mapa2 <- mapa2 |> 
  left_join(base_final, by = c("CD_MUN" = "ibge"))


teste <- base_final |> #invertando o left_foin
  left_join(mapaibge, by = c("ibge" = "CD_MUN"))

ggplot(data = teste) +
  geom_sf(aes(fill = razão_medicos, geometry = geometry)) +  # Adicione a estética geometry
  scale_fill_viridis_c(limits = c(0, 8)) +  # Use a escala de preenchimento Viridis
  labs(fill = "Médicos por mil hab") +  # Etiqueta para a legenda de cores
  theme_void()

ggsave('mapa3.png', width = 8, height = 8, dpi = 500)

```
