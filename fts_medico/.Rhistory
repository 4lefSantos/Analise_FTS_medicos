filter(categoria == "Médico")
#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |>
select(ibge, municipio, total) |>
group_by(ibge) |>
summarise(população = sum(total)) |>
mutate(ibge = substr(ibge, 1, 6))
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |>
filter(nivel_atencao == "Primária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipio |>
left_join(med_primario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |>
filter(nivel_atencao == "Primária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipios |>
left_join(med_primario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção secundario
med_secundario <- medicos_municipios |>
filter(nivel_atencao == "Secundária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipios |>
left_join(med_secundario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção terciario
med_terciario <- medicos_municipios |>
filter(nivel_atencao == "Terciária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipios |>
left_join(med_terciario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
View(razao_med_primario)
View(medicos_municipios)
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla) |>
group_by(cod_ibge) |>
summarise(medicos_FTE_40 = sum(FTE_40))
View(medicos_total_mun)
View(medicos_municipios)
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(cod_ibge, uf_sigla, FTE_40, municipio) |>
group_by(cod_ibge) |>
summarise(medicos_FTE_40 = sum(FTE_40))
View(medicos_total_mun)
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(cod_ibge, uf_sigla, FTE_40, municipio) |>
group_by(cod_ibge, municipio) |>
summarise(medicos_FTE_40 = sum(FTE_40))
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(cod_ibge, uf_sigla, FTE_40, municipio) |>
group_by(cod_ibge, uf_sigla, municipio) |>
summarise(medicos_FTE_40 = sum(FTE_40), .groups = 'drop')
View(medicos_total_mun)
View(população_municipios)
razao_med_total <- população_municipios |>
left_join(medicos_total_mun, by = c("ibge" = "cod_ibge")) |>
mutate(razão_medicos = medicos_FTE_40/população)
View(razao_med_total)
View(razao_med_terciario)
View(razao_med_terciario)
razao_med_atencao <- rbind(razao_med_primario, razao_med_secundario, razao_med_terciario)
View(razao_med_atencao)
View(razao_med_total)
PIB <- read_excel("01-dados/PIB.xlsx")
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx"")
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx"")
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx")
View(PIB)
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(PIB)
base_final <- razão_med_total |>
left_join(PIB, by = c("ibge" = "ibge"))
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge"))
View(base_final)
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge")) |>
mutate(pib_percapita = (PIB/população)*1000)
IDH <- read_excel("01-dados/IDH.xlsx")
IDH <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/IDH.xlsx")
View(IDH)
base_final <- base_final |>
left_join(IDH, by = c("ibge"))
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge")) |>
mutate(pib_percapita = (PIB/população)*1000)
#| echo: false
library(tidyverse)
library(readxl)
library(RODBC)
censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
# codigo para acessar dados de um datalake
dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
HOST=%s;
PORT=%s;
UID=%s;
PWD=%s;
AUTHENTICATIONTYPE=Basic Authentication;
CONNECTIONTYPE=Direct",
dremio_host,
dremio_port,
dremio_uid,
dremio_pwd))
query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'
profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |>
filter(ano == "2024") |>
filter(uf_sigla == "GO") |>
filter(categoria == "Médico")
#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |>
select(ibge, municipio, total) |>
group_by(ibge) |>
summarise(população = sum(total)) |>
mutate(ibge = substr(ibge, 1, 6))
#| echo: false
# CONFIGURANDO BASE MASCULINO
faixa_masculino <- censo_municipios_goias[,1:23] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Masculino", .after = municipio) |>
mutate(faixa_etaria = gsub("H-", "", faixa_etaria))
# CONFIGURANDO BASE FEMININO
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Feminino", .after = municipio) |>
mutate(faixa_etaria = gsub("M-", "", faixa_etaria))
# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino)
#| echo: false
library(tidyverse)
library(readxl)
library(RODBC)
censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
#| echo: false
# CONFIGURANDO BASE MASCULINO
faixa_masculino <- censo_municipios_goias[,1:23] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Masculino", .after = municipio) |>
mutate(faixa_etaria = gsub("H-", "", faixa_etaria))
# CONFIGURANDO BASE FEMININO
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Feminino", .after = municipio) |>
mutate(faixa_etaria = gsub("M-", "", faixa_etaria))
# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino)
# codigo para acessar dados de um datalake
dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
HOST=%s;
PORT=%s;
UID=%s;
PWD=%s;
AUTHENTICATIONTYPE=Basic Authentication;
CONNECTIONTYPE=Direct",
dremio_host,
dremio_port,
dremio_uid,
dremio_pwd))
query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'
profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |>
filter(ano == "2024") |>
filter(uf_sigla == "GO") |>
filter(categoria == "Médico")
#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |>
select(ibge, municipio, total) |>
group_by(ibge) |>
summarise(população = sum(total)) |>
mutate(ibge = substr(ibge, 1, 6))
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |>
filter(nivel_atencao == "Primária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipios |>
left_join(med_primario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção secundario
med_secundario <- medicos_municipios |>
filter(nivel_atencao == "Secundária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipios |>
left_join(med_secundario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção terciario
med_terciario <- medicos_municipios |>
filter(nivel_atencao == "Terciária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipios |>
left_join(med_terciario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(cod_ibge, uf_sigla, FTE_40, municipio) |>
group_by(cod_ibge, uf_sigla, municipio) |>
summarise(medicos_FTE_40 = sum(FTE_40), .groups = 'drop')
razao_med_total <- população_municipios |>
left_join(medicos_total_mun, by = c("ibge" = "cod_ibge")) |>
mutate(razão_medicos = medicos_FTE_40/população)
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge")) |>
mutate(pib_percapita = (PIB/população)*1000)
View(base_final)
IDH <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/IDH.xlsx")
View(IDH)
base_final <- base_final |>
left_join(IDH, by = c("ibge" = "ibge"))
View(base_final)
#| echo: false
library(tidyverse)
library(readxl)
library(RODBC)
censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
# codigo para acessar dados de um datalake
dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
HOST=%s;
PORT=%s;
UID=%s;
PWD=%s;
AUTHENTICATIONTYPE=Basic Authentication;
CONNECTIONTYPE=Direct",
dremio_host,
dremio_port,
dremio_uid,
dremio_pwd))
query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'
profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |>
filter(ano == "2024") |>
filter(uf_sigla == "GO") |>
filter(categoria == "Médico")
#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |>
select(ibge, municipio, total) |>
group_by(ibge) |>
summarise(população = sum(total)) |>
mutate(ibge = substr(ibge, 1, 6))
#| echo: false
library(tidyverse)
library(readxl)
library(RODBC)
censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
#| echo: false
# CONFIGURANDO BASE MASCULINO
faixa_masculino <- censo_municipios_goias[,1:23] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Masculino", .after = municipio) |>
mutate(faixa_etaria = gsub("H-", "", faixa_etaria))
# CONFIGURANDO BASE FEMININO
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Feminino", .after = municipio) |>
mutate(faixa_etaria = gsub("M-", "", faixa_etaria))
# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino)
# codigo para acessar dados de um datalake
dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
HOST=%s;
PORT=%s;
UID=%s;
PWD=%s;
AUTHENTICATIONTYPE=Basic Authentication;
CONNECTIONTYPE=Direct",
dremio_host,
dremio_port,
dremio_uid,
dremio_pwd))
query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'
profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |>
filter(ano == "2024") |>
filter(uf_sigla == "GO") |>
filter(categoria == "Médico")
#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |>
select(ibge, municipio, total) |>
group_by(ibge) |>
summarise(população = sum(total)) |>
mutate(ibge = substr(ibge, 1, 6))
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |>
filter(nivel_atencao == "Primária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipios |>
left_join(med_primario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção secundario
med_secundario <- medicos_municipios |>
filter(nivel_atencao == "Secundária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipios |>
left_join(med_secundario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção terciario
med_terciario <- medicos_municipios |>
filter(nivel_atencao == "Terciária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipios |>
left_join(med_terciario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(cod_ibge, uf_sigla, FTE_40, municipio) |>
group_by(cod_ibge, uf_sigla, municipio) |>
summarise(medicos_FTE_40 = sum(FTE_40), .groups = 'drop')
razao_med_total <- população_municipios |>
left_join(medicos_total_mun, by = c("ibge" = "cod_ibge")) |>
mutate(razão_medicos = medicos_FTE_40/população)
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(PIB)
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge")) |>
mutate(pib_percapita = (PIB/população)*1000)
View(base_final)
IDH <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/IDH.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
base_final <- base_final |>
left_join(IDH, by = c("ibge" = "ibge"))
IDH <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/IDH.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
base_final <- base_final |>
left_join(IDH, by = c("ibge" = "ibge")) |>
select(-municipio.x, -municipio.y)
base_final <- base_final |>
select(-municipio.x.x, - municipio.y.y)
#| echo: false
library(tidyverse)
library(readxl)
library(RODBC)
censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
#| echo: false
# CONFIGURANDO BASE MASCULINO
faixa_masculino <- censo_municipios_goias[,1:23] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Masculino", .after = municipio) |>
mutate(faixa_etaria = gsub("H-", "", faixa_etaria))
# CONFIGURANDO BASE FEMININO
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |>
gather(key = "faixa_etaria", value = "total", 3:23) |>
mutate(sexo = "Feminino", .after = municipio) |>
mutate(faixa_etaria = gsub("M-", "", faixa_etaria))
# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino)
# codigo para acessar dados de um datalake
dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
HOST=%s;
PORT=%s;
UID=%s;
PWD=%s;
AUTHENTICATIONTYPE=Basic Authentication;
CONNECTIONTYPE=Direct",
dremio_host,
dremio_port,
dremio_uid,
dremio_pwd))
query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'
profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |>
filter(ano == "2024") |>
filter(uf_sigla == "GO") |>
filter(categoria == "Médico")
#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |>
select(ibge, municipio, total) |>
group_by(ibge) |>
summarise(população = sum(total)) |>
mutate(ibge = substr(ibge, 1, 6))
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |>
filter(nivel_atencao == "Primária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipios |>
left_join(med_primario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção secundario
med_secundario <- medicos_municipios |>
filter(nivel_atencao == "Secundária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipios |>
left_join(med_secundario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#Filtrando nível de atenção terciario
med_terciario <- medicos_municipios |>
filter(nivel_atencao == "Terciária") |>
select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)
#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipios |>
left_join(med_terciario, by = c("ibge" = "cod_ibge")) |>
mutate(razao_medicos = FTE_40/população)
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
select(cod_ibge, uf_sigla, FTE_40, municipio) |>
group_by(cod_ibge, uf_sigla, municipio) |>
summarise(medicos_FTE_40 = sum(FTE_40), .groups = 'drop')
razao_med_total <- população_municipios |>
left_join(medicos_total_mun, by = c("ibge" = "cod_ibge")) |>
mutate(razão_medicos = medicos_FTE_40/população)
View(razao_med_total)
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(PIB)
PIB <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/PIB.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge")) |>
mutate(pib_percapita = (PIB/população)*1000) |>
select(ibge, municipio, população, medicos_FTE_40, razão_medicos, pib_percapita)
base_final <- razao_med_total |>
left_join(PIB, by = c("ibge" = "ibge")) |>
mutate(pib_percapita = (PIB/população)*1000)
View(base_final)
base_final <- base_final |>
select(ibge, municipio.x, população, medicos_FTE_40, razão_medicos, pib_percapita)
IDH <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/IDH.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(IDH)
base_final <- base_final |>
left_join(IDH, by = c("ibge" = "ibge"))
base_final <- base_final |>
select(-municipio.x)
Gini <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Gini.xlsx") |>
mutate(ibge = substr(ibge, 1, 6)) |>
select(-municipio)
Gini <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Gini.xlsx") |>
mutate(ibge = substr(ibge, 1, 6)) |>
select(-municipio)
Gini <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Gini.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(Gini)
base_final <- base_final |>
left_join(Gini, by = c("IBGE" = "IBGE"))
base_final <- base_final |>
left_join(Gini, by = c("ibge" = "ibge"))
View(base_final)
base_final <- base_final |>
select(-Territorialidades)
urban <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Urbanização.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
urban <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Urbanização.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(urban)
urban <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/Urbanização.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(urban)
urban <- urban |>
select(-municipio)
base_final <- base_final |>
left_join(urban, by = c("ibge" = "ibge"))
base_final <- base_final |>
mutate(tx_urban = km_urbanizado/km_mapeado)
View(base_final)
cadunico <- read.csv("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/cadunico.csv")
cadunico <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/cadunico.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
cadunico <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/cadunico.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
View(cadunico)
cadunico <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/cadunico.xlsx") |>
mutate(ibge = substr(ibge, 1, 6))
cadunico <- cadunico |>
select(-Unidade_Territorial)
base_final <- base_final |>
left_join(cadunico, by = c("ibge" = "ibge"))
