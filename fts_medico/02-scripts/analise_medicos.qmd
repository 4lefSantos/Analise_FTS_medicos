---
title: "Analise_medicos"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(tidyverse)
library(readxl)
library(RODBC)

censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
```

You can add options to executable code like this

```{r}
#| echo: false

# CONFIGURANDO BASE MASCULINO

faixa_masculino <- censo_municipios_goias[,1:23] |> 
                      gather(key = "faixa_etaria", value = "total", 3:23) |> 
  mutate(sexo = "Masculino", .after = municipio) |> 
  mutate(faixa_etaria = gsub("H-", "", faixa_etaria))
         
# CONFIGURANDO BASE FEMININO    
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |> 
                      gather(key = "faixa_etaria", value = "total", 3:23) |> 
  mutate(sexo = "Feminino", .after = municipio) |> 
  mutate(faixa_etaria = gsub("M-", "", faixa_etaria))

# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino)


```

```{r}
# codigo para acessar dados de um datalake 

dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")


channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
                                     HOST=%s;
                                     PORT=%s;
                                     UID=%s;
                                     PWD=%s;
                                     AUTHENTICATIONTYPE=Basic Authentication;
                                     CONNECTIONTYPE=Direct", 
                         dremio_host, 
                         dremio_port, 
                         dremio_uid, 
                         dremio_pwd))

query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'



profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
```

```{r}
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |> 
  filter(ano == "2024") |> 
  filter(uf_sigla == "GO") |> 
  filter(categoria == "Médico")

#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipio <- faixa_total |> 
  select(ibge, municipio, total) |> 
  group_by(ibge) |> 
  summarise(população = sum(total)) |> 
  mutate(ibge = substr(ibge, 1, 6))


```

```{r}
#Filtrando nível de atenção primária
razao_primario <- medicos_municipios |> 
  filter(nivel_atencao == "Primária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipio |>
  left_join(razao_primario, by = c("ibge" = "cod_ibge")) |> 
  mutate(razao_medicos = FTE_40/população)

#Filtrando nível de atenção secundario
razao_secundario <- medicos_municipios |> 
  filter(nivel_atencao == "Secundária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipio |>
  left_join(razao_secundario, by = c("ibge" = "cod_ibge")) |> 
  mutate(razao_medicos = FTE_40/população)

#Filtrando nível de atenção terciario
razao_terciario <- medicos_municipios |> 
  filter(nivel_atencao == "Terciária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipio |> 
    left_join(razao_terciario, by = c("ibge" = "cod_ibge")) |> 
    mutate(razao_medicos = FTE_40/população)
```

```{r}
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_mun <- medicos_municipios |>
  group_by(cod_ibge) |> 
  summarise(medicos_FTE_40 = sum(FTE_40))
  
```
