---
title: "Analise_medicos"
format: html
editor: visual
---


# Quarto

O presente trabalho busca estimar a razão de médicos por habitantes dos municípios de Goiás, para isso serão executadas as seguintes etapas:

1\. Levantamento dos dados populacionais.

1.1 Censo 2022;

1.2. Tratamento dos dados populacionais;

2.1 Levantamento dos dados de profissionais de saúde por munícipio;

2.2. Selecionar apenas médicos do munícipio de Goiás;

3\. Calculando a razão médicos por habitantes desagregado por nível de atenção;

4\. Calculando a razão médicos por habitantes;

# 1. Levantamento dos dados populacionais.

A coleta de dados populacionais utilizada foi do Censo 2022 através do Sistema IBGE de Recuperação Automática - SIDRA, exportada em formato xlsx.

### 1.1. Censo 2022.

Aqui utiliza-se a função read_excel do pacote readxl para o carregamento dos dados.


```{r}
#| echo: false
library(tidyverse)
library(readxl)
library(RODBC)

censo_municipios_goias <- read_excel("C:/Users/alefs/OneDrive/Documentos/Analise_FTS_medicos/fts_medico/01-dados/censo municipios goias.xlsx")
```


### 1.2. Tratamento dos dados populacionais.

Após o carregamento da base, executa-se alguns tratamentos: empilhamento dos dados dividido em dois datraframe distintos (masculino e feminino), e por fim a agregação dessas duas bases.


```{r}
#| echo: false

# CONFIGURANDO BASE MASCULINO

faixa_masculino <- censo_municipios_goias[,1:23] |> 
                      gather(key = "faixa_etaria", value = "total", 3:23) |> 
  mutate(sexo = "Masculino", .after = municipio) |> 
  mutate(faixa_etaria = gsub("H-", "", faixa_etaria))
         
# CONFIGURANDO BASE FEMININO    
faixa_feminino <- censo_municipios_goias[,c(1:2, 24:44)] |> 
                      gather(key = "faixa_etaria", value = "total", 3:23) |> 
  mutate(sexo = "Feminino", .after = municipio) |> 
  mutate(faixa_etaria = gsub("M-", "", faixa_etaria))

# EMPILHANDO AS DUAS BASES
faixa_total <- rbind(faixa_feminino, faixa_masculino)


```

```{r}
# codigo para acessar dados de um datalake 

dremio_host <- Sys.getenv("endereco")
dremio_port <- Sys.getenv("port")
dremio_uid <- Sys.getenv("uid")
dremio_pwd <- Sys.getenv("datalake")


channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;
                                     HOST=%s;
                                     PORT=%s;
                                     UID=%s;
                                     PWD=%s;
                                     AUTHENTICATIONTYPE=Basic Authentication;
                                     CONNECTIONTYPE=Direct", 
                         dremio_host, 
                         dremio_port, 
                         dremio_uid, 
                         dremio_pwd))

query <- 'SELECT * FROM "Open Analytics Layer".Profissionais."Quantidade de profissionais de saúde por município, na métrica da FTE"'



profissionais_saude <- sqlQuery(channel, query, as.is = TRUE)
```

```{r}
#FILTRANDO OS MEDICOS E MUNICIPIOS DE GOIÁS DA BASE DE FTS
medicos_municipios <- profissionais_saude |> 
  filter(ano == "2024") |> 
  filter(uf_sigla == "GO") |> 
  filter(categoria == "Médico")

#CALCULANDO A POPULAÇÃO TOTAL POR MUNICÍPIO
população_municipios <- faixa_total |> 
  select(ibge, municipio, total) |> 
  group_by(ibge) |> 
  summarise(população = sum(total)) |> 
  mutate(ibge = substr(ibge, 1, 6))


```

```{r}
#Filtrando nível de atenção primária
med_primario <- medicos_municipios |> 
  filter(nivel_atencao == "Primária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO PRIMÁRIA
razao_med_primario <- população_municipios |>
  left_join(med_primario, by = c("ibge" = "cod_ibge")) |> 
  mutate(razao_medicos = FTE_40/população)

#Filtrando nível de atenção secundario
med_secundario <- medicos_municipios |> 
  filter(nivel_atencao == "Secundária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO SECUNDARIO
razao_med_secundario <- população_municipios |>
  left_join(med_secundario, by = c("ibge" = "cod_ibge")) |> 
  mutate(razao_medicos = FTE_40/população)

#Filtrando nível de atenção terciario
med_terciario <- medicos_municipios |> 
  filter(nivel_atencao == "Terciária") |> 
  select(-regiao, -macrorregiao, -cod_regsaud, -regiao_saude, -latitude, -longitude, -ch_total, -cod_macrorregiao, -ano, -uf_sigla)

#CALCULANDO A RAZÃO DE MÉDICOS/POPULAÇÃO DA ATENÇÃO TERCIARIO
razao_med_terciario <- população_municipios |> 
    left_join(med_terciario, by = c("ibge" = "cod_ibge")) |> 
    mutate(razao_medicos = FTE_40/população)

```

```{r}
#CALCULANDO A RAZÃO MEDICO/POPULAÇÃO PARA TODOS OS NÍVEIS DE ATENÇÃO
medicos_total_mun <- medicos_municipios |>
  select(cod_ibge, uf_sigla, FTE_40, municipio) |> 
  group_by(cod_ibge, uf_sigla, municipio) |> 
  summarise(medicos_FTE_40 = sum(FTE_40), .groups = 'drop')

razao_med_total <- população_municipios |> 
  left_join(medicos_total_mun, by = c("ibge" = "cod_ibge")) |> 
  mutate(razão_medicos = medicos_FTE_40/população)
  
```

